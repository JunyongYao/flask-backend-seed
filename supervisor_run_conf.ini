[program:backend]
directory = %(ENV_APP_ROOT)s ; the program start directory
command = %(ENV_BIN_ROOT)s/gunicorn -c gunicorn.conf manager:flask_app  ; command line to start program, it is the same as cmd you run mannually
autostart = true     ; set as autostart when start all in superviord
startsecs = 15        ; check program status after 15 seconds if it started
autorestart = true   ; if start failed, restart it auto
startretries = 3     ; restart retry times
redirect_stderr = true
;stdout_logfile_maxbytes = 20MB  ; It is highly recommended to use linux embeded log rotator to do it.
;stdout_logfile_backups = 20     ; It is highly recommended to use linux embeded log rotator to do it.
; for stdout log fileï¼Œneed to make sure its directory exists before running. Otherwise, supervisord cannot start this program.
stdout_logfile = %(ENV_APP_ROOT)s/logs/backend_stdout.log
priority=999        ; highest priority


[program:celery]
directory = %(ENV_APP_ROOT)s
; If more logs needed, you can replace INFO with DEBUG
command = %(ENV_BIN_ROOT)s/celery worker -A celery_worker -l INFO
autostart = true
startsecs = 15
autorestart = true
startretries = 3
redirect_stderr = true
stdout_logfile = %(ENV_APP_ROOT)s/logs/celery_stdout.log
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true
priority=900


[program:celery_beat]
directory = %(ENV_APP_ROOT)s
command = %(ENV_APP_ROOT)s/celery -A celery_worker beat
autostart = true
startsecs = 15
autorestart = true
startretries = 3
redirect_stderr = true
stdout_logfile = %(ENV_APP_ROOT)s/logs/celery_beat_stdout.log
priority=950